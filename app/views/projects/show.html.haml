- provide :page_title, @project.title

- if can? :collaborate_on, @project
  = render "projects/officer_nav"
- else
  != page_header @project.title do
    %small
      - if @project.featured
        %i.icon-star
      - if @project.bids_due_at
        = t("g.#{@project.open_for_bids? ? 'bids_due_on' : 'bids_were_due_on'}", date: @project.bids_due_at.to_formatted_s(:readable))
      - else
        = t('g.open_for_bids')

.row-fluid
  .span7
    - if !@project.abstract.blank?
      %h4= Project.human_attribute_name(:abstract)
      %p= @project.abstract

    %h4
      = t('g.description')
      - if @project.amendments.posted.any?
        %small= t('.jump_to_amendments_html', count: @project.amendments.posted.length)

    %p= simple_format @project.body

    - if @project.amendments.posted.any?
      #amendments
        %h4= t('g.amendments')
        - @project.amendments.posted.each do |amendment|
          %h5
            = amendment.title
            %small= t('g.posted_on_date', date: amendment.posted_at.to_formatted_s(:readable_dateonly))
          %p!= amendment.body

  .span5
    - if vendor_signed_in?
      != watch_button(@project, "Watching this project will subscribe you to alerts about amendments.")

    - if GlobalConfig.instance[:bid_submission_enabled]
      - if current_vendor && (bid = current_vendor.bid_for_project(@project)) && bid.submitted
        = t('.you_submitted_your_bid.line_html', link: link_to(t('.you_submitted_your_bid.link'), project_bid_path(@project, bid)), date: bid.submitted_at.to_formatted_s(:readable))

      - elsif vendor_signed_in? && @project.open_for_bids?
        - if (bid = current_vendor.bid_for_project(@project))
          =link_to t('g.continue_writing_bid'), new_project_bid_path(@project), class: "btn btn-inverse"
        - else
          =link_to t('g.bid_now'), new_project_bid_path(@project), class: "btn btn-inverse"

      - elsif !signed_in?
        = t('.sign_in_to_bid.line_html', link: link_to(t('.sign_in_to_bid.link'), sign_in_path))


    - if GlobalConfig.instance[:questions_enabled]
      %h4= t('g.questions')
      - if vendor_signed_in?
        #ask-question.collapse
          = form_for [@project, Question.new] do |f|
            = f.text_area :body, cols: nil, rows: nil, class: "span8"
            %br
            = f.submit t('g.submit'), class: "btn btn-inverse"
        %a#ask-question-toggle{"data-toggle" => "collapse", "data-target" => "#ask-question", "data-toggle-text" => "(hide)"} Ask question
      - elsif officer_signed_in? && (can? :answer_questions, @project)
        .alert.alert-success
          = t('.click_here_to_answer_questions.line_html', link: link_to(t('.click_here_to_answer_questions.link'), project_questions_path(@project)))
      - elsif !officer_signed_in?
        = t('.sign_in_to_ask_question.line_html', link: link_to(t('.sign_in_to_ask_question.link'), sign_in_path))

      #questions-list
        :javascript
          new ProcureIo.Backbone.QuestionPage({bootstrapData: #{@questions_json}, projectId: #{@project.id}});
