- provide :page_action, t('g.edit_description')

= render "projects/header_backend"

= simple_form_for @project, html: { multipart: true } do |f|
  .row-fluid
    .span6
      = f.input :body, input_html: { class: 'js-wysihtml5' }

      %div
        %h5
          = t('g.amendments')
          = link_to t('g.new_amendment'), project_amendments_path(@project), method: :post, class: "btn btn-mini regular-font"

        - if @project.amendments.length > 0
          %ul
            - @project.amendments.each do |amendment|
              %li
                %a{"href" => edit_project_amendment_path(@project, amendment)}= amendment.title || amendment.id
        - else
          %div= t('g.no_amendments')


      %div
        %h5 Attachments
        - if @project.project_attachments.length > 0
          %ul
            - @project.project_attachments.each do |project_attachment|
              %li
                %a{"href" => project_attachment.upload.url}= project_attachment.upload.file.filename
                %a.js-remove-attachment{"href" => project_project_attachment_path(@project, project_attachment), "data-method" => "delete", "data-remote" => true} (remove)

        .new-attachment-fields
          != fileupload_tag('new_attachments[]', true)

        %div
          %small
            %a.js-add-another Add another

      = render "project_revisions/list"

    .span6
      = f.input :posted, as: :boolean
      = # f.input :featured
      = f.input :title
      = f.input :tags, input_html: { value: @project.tags.map(&:name).join(",") }

      :javascript
        $("#project_tags").select2({
          tags: #{Tag.all_for_select2.to_json},
          tokenSeparators: [','],
          width: "off",
          containerCssClass: 'span10'
        });

      = f.input :bids_due_at
      = f.input :question_period_ends_at
      = f.input :abstract, hint: "We'll auto-generate this from the project body if you don't provide one."

  .form-actions
    = f.button :submit, class: 'btn-primary'
